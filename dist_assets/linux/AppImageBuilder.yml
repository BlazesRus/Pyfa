version: 1

AppDir:
  path: $BUILD_DIR/AppDir

  app_info:
    id: pyfa
    name: pyfa
    icon: pyfa
    version: $PYFA_VERSION
    exec: ${APPDIR}/bin/python3
    exec_args: "-s ${APPDIR}/opt/pyfa/pyfa.py $@"

  apt:
    arch: amd64
    sources:
      - sourceline: 'deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse'
        key_url: 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3b4fe6acc0b21f32'

    include: []
    exclude: []

  after_bundle:
    - mkdir -p $BUILD_DIR/AppDir
    # Detect location of python using venv config and copy it over to our app directory
    - cp -r `~/venv3.11/bin/python scripts/getConfigVal.py ~/venv3.11/pyvenv.cfg base-prefix`/* $BUILD_DIR/AppDir
    # Install python dependencies
    - $BUILD_DIR/AppDir/bin/python3 -s -m pip install -U pip setuptools wheel
    - $BUILD_DIR/AppDir/bin/python3 -s -m pip install -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-22.04 -r requirements.txt
    # Compile app data
    - find locale/ -type f -name "*.po" -exec msgen "{}" -o "{}" \;
    - $BUILD_DIR/AppDir/bin/python3 scripts/compile_lang.py
    - $BUILD_DIR/AppDir/bin/python3 scripts/dump_crowdin_progress.py
    - $BUILD_DIR/AppDir/bin/python3 db_update.py
    # Calculate app version
    - export PYFA_VERSION="$($BUILD_DIR/AppDir/bin/python3 scripts/dump_version.py)"
    # Copy app and clean it up
    - mkdir -p $BUILD_DIR/AppDir/usr/src
    - cp -r eos graphs gui imgs locale service utils eve.db config.py pyfa.py db_update.py README.md LICENSE version.yml $BUILD_DIR/AppDir/usr/src
    - find $BUILD_DIR/AppDir/usr/src | grep -E "(__pycache__|\.pyc|\.pyo$)" | xargs rm -rf

AppImage:
  sign-key: None
  arch: x86_64
